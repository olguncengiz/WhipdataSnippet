- Flask uses Jinja notations, like {{variable}}, and so does AngularJS. So, I had to "pip install" Flask Triangle module and explicitly define angular variables like {{variable|angular}}. This way, the HTML is rendered for AngularJS
- The ng-repeat was not working properly, because the ng-controller was defined multiple times. I removed duplicate definitions, and it worked
- I couldn't make my Amazon account work properly on time, so I tried Heroku for the first time. I struggled a bit about configuration, but I managed to have the app working on Heroku server, after adding Procfile, requirements.txt and runtime.txt files.
- Flask auto assigns port 5000 for web server, but Heroku randonly assigns a port to the application. So, I had to install "gunicorn" library to the solution.
- It took me so long to make an already-built photo Carousel work, so I just skipped to a plain HTML table style carousel. I made a very primitive HTML table style carousel. You can still select/deselect images and the metadata is shown under the photo list. But I know that there are many ready-to-use photo carousel tools/forms/controllers for Angular, just didn’t feel the need in such a short time and straight-forward assignment.
- img src=”{{ photo.id | angular }}” kept returning 404 not found error, so I googled it and found this website: https://stackoverflow.com/questions/17448992/angularjs-prevent-a-404-error-in-img-src-attribute Instead of src=””, I used ng-src=”” to solve this problem
